#!/usr/bin/env zsh

CRITERIA=$1
REMOTE_NAME_COUNT=$(git remote | wc -l)
REMOTE_NAME=$(git remote)

if (( REMOTE_NAME_COUNT != 1 )); then
    printf "Only one remote is supported.\n\n"
    return 1
fi

if [[ -z $CRITERIA ]]; then
    RESULTS=(${(@f)$(git branch -r | grep -v "HEAD ->" | sed "s/^[ ]*$REMOTE_NAME\///")})
else
    RESULTS=(${(@f)$(git branch -r | grep "$CRITERIA" | grep -v "HEAD ->" | sed "s/^[ ]*$REMOTE_NAME\///")})
fi

COUNT=$#RESULTS

if (( COUNT == 0 )); then
    printf "\nThere are no remote branches containing ${LIGHT_RED}%s${NORMAL}.\n\n" "$CRITERIA"
    return 1
fi

if (( COUNT > 1 )); then
    printf "\nThere are multiple branches containing ${LIGHT_RED}%s${NORMAL}:\n\n" "$CRITERIA"

    SAVED_PROMPT=$PROMPT3
    PROMPT3="Select a number? "

    printf "%b" "${BLUE}"

    select BRANCH in $RESULTS; do
        if [[ -n "$BRANCH" ]]; then
            LOCAL_BRANCH="$BRANCH"
            break
        else
            printf "%bWrong selection.%b\n" "${RED}" "${BLUE}"
        fi
    done

    printf "%b" "${NORMAL}"
    PROMPT3=$SAVED_PROMPT
else
    LOCAL_BRANCH=$RESULTS
fi

REMOTE_BRANCH="$REMOTE_NAME/$LOCAL_BRANCH"

IS_ALREADY_LOCAL_BRANCH=$(git branch | grep "$LOCAL_BRANCH")

if [[ -n "$IS_ALREADY_LOCAL_BRANCH" ]]; then
    if git checkout -q "$LOCAL_BRANCH" ; then
        printf "\nSuccessfuly switched to the local branch ${LIGHT_GREEN}%s${NORMAL}.\n\n" "$LOCAL_BRANCH"
        return 0
    else
        printf "\nCould not switch to the local branch: ${BLUE}%s${NORMAL}.\n\n" "$LOCAL_BRANCH"
        return 1
    fi
else
    if git checkout -q -b "$LOCAL_BRANCH" --track "$REMOTE_BRANCH" ; then
        printf "\nSuccessfuly checked out locally the remote branch ${LIGHT_GREEN}%s${NORMAL}.\n\n" "$LOCAL_BRANCH"
        return 0
    else
        printf "\nCould not switch to the remote branch: ${BLUE}%s${NORMAL}.\n\n" "$REMOTE_BRANCH"
        return 1
    fi
fi