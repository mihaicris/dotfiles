#!/usr/bin/env zsh

heading "Creating local branch from remote branch"

is_git_folder || exit 1

QUERY=$1
REMOTE_COUNT=$(git remote | wc -l)
REMOTE_NAME=$(git remote)

if (( REMOTE_COUNT != 1 )); then
    print "\nOnly one remote is supported.\n"
    return 1
fi

REMOTE_BRANCHES=$(git branch -r | grep -v "HEAD ->")

if [[ $QUERY ]]; then
    REMOTE_BRANCHES=$(echo $REMOTE_BRANCHES | grep $QUERY)
fi

REMOTE_BRANCHES=$(echo $REMOTE_BRANCHES | sed "s/^[ ]*$REMOTE_NAME\///")
RESULTS=(${(f)REMOTE_BRANCHES:#})
COUNT=$#RESULTS

if (( COUNT == 0 )); then
    print "\nThere are no remote branches containing ${LIGHT_RED}${QUERY}${NORMAL}.\n"
    return 1
fi

if (( COUNT > 1 )); then
    if [[ -z $QUERY ]]; then
        print "\nThe list of remote branches is:\n"
    else
        print "\nThere are multiple branches containing ${LIGHT_RED}${QUERY}${NORMAL}:\n"
    fi
    SAVED_PROMPT=$PROMPT3
    PROMPT3="Choose a number: "

    print -n "${BLUE}"

    select BRANCH in $RESULTS; do
        if [[ -n "$BRANCH" ]]; then
            LOCAL_BRANCH="$BRANCH"
            break
        else
            print "${RED}Wrong selection.${BLUE}"
        fi
    done

    print -n "${NORMAL}"
    PROMPT3=$SAVED_PROMPT
else
    LOCAL_BRANCH=$RESULTS
fi
CURRENT_BRANCH=$(git branch --show-current)
REMOTE_BRANCH="$REMOTE_NAME/$LOCAL_BRANCH"

IS_ALREADY_LOCAL_BRANCH=$(git branch | grep "$LOCAL_BRANCH")

if [[ $IS_ALREADY_LOCAL_BRANCH ]]; then
    if [[ $CURRENT_BRANCH == $LOCAL_BRANCH ]]; then
        print "\nAlready on the local branch ${LIGHT_GREEN}${LOCAL_BRANCH}${NORMAL}.\n"
    elif git checkout -q "$LOCAL_BRANCH" ; then
        print "\nSuccessfuly switched to the local branch ${LIGHT_GREEN}${LOCAL_BRANCH}${NORMAL}.\n"
        return 0
    else
        print "\nCould not switch to the local branch ${BLUE}${LOCAL_BRANCH}${NORMAL}.\n"
        return 1
    fi
else
    if git checkout -q -b "$LOCAL_BRANCH" --track "$REMOTE_BRANCH" ; then
        print "\nSuccessfuly checked out locally the remote branch ${LIGHT_GREEN}${LOCAL_BRANCH}${NORMAL}.\n"
        return 0
    else
        print "\nCould not checkout locally the remote branch ${BLUE}${REMOTE_BRANCH}${NORMAL}.\n"
        return 1
    fi
fi

