#!/usr/bin/env zsh

heading "Daily Standup"

# Shows the usage
function usage() {
    cat <<EOS
Usage:
  daily [-a <author name>] [-h]
  -a      - Specify author to restrict search to
  -h      - Display this help screen
  -l      - Show all commits, don't restrict to from yesterday (or from last friday if in weekend or monday)
Examples:
  daily -a "Mihai Cristescu" -l
EOS
}

function list_commits {
    REPO=$1

    DAY=$(date|cut -d ' ' -f 1)

    case $DAY in
        "Sat"|"Sun"|"Mon" )
            SINCE="last.friday.midnight"
            ;;
        * )
            SINCE="yesterday.midnight"
            ;;
    esac

    WIDTH=$(tput cols)

    if (( WIDTH > 150 )); then
        WIDTH=$(( WIDTH - 80))
    else
        WIDTH="80"
    fi

    GIT_DATE_FORMAT='%a, %d %b %H:%M'
    GIT_PRETTY_FORMAT='%C(bold white)%<(25,trunc)%an%Creset %<(12,trunc)%Cred%h%Creset %Cgreen%cd %C(yellow)%<(15)%cr%Creset %<('${WIDTH}'i,trunc)%s'

    GIT_LOG_COMMAND=""
    GIT_LOG_COMMAND="${GIT_LOG_COMMAND} git -C $REPO --no-pager log"
    GIT_LOG_COMMAND="${GIT_LOG_COMMAND} --color=always"
    GIT_LOG_COMMAND="${GIT_LOG_COMMAND} --all"
    GIT_LOG_COMMAND="${GIT_LOG_COMMAND} --reverse"
    GIT_LOG_COMMAND="${GIT_LOG_COMMAND} --abbrev-commit"
    GIT_LOG_COMMAND="${GIT_LOG_COMMAND} --no-merges"
    GIT_LOG_COMMAND="${GIT_LOG_COMMAND} --oneline"

    # If option l is not set, restrict to SINCE date
    [[ -z $OPTION_l ]] && GIT_LOG_COMMAND="${GIT_LOG_COMMAND} --since='${SINCE}'"

    GIT_LOG_COMMAND="${GIT_LOG_COMMAND} --author='${AUTHOR}'"
    GIT_LOG_COMMAND="${GIT_LOG_COMMAND} --date=format:'${GIT_DATE_FORMAT}'"
    GIT_LOG_COMMAND="${GIT_LOG_COMMAND} --pretty=format:'${GIT_PRETTY_FORMAT}'"

    GIT_OUTPUT=$(eval ${GIT_LOG_COMMAND} 2>/dev/null)

    if [[ "$GIT_OUTPUT" ]]; then
        print "${UNDERLINE}${BOLD}${BLUE}${REPO}${NORMAL} "
        print "$GIT_OUTPUT\n"
    fi
}

is_git_folder || exit 1

while getopts "a:hl" opt; do
    case $opt in
        a|h|l)
            typeset "OPTION_$opt=${OPTARG:-0}"
            ;;
        \?)
            echo >&2 "Use 'daily -h' to see usage info"
            exit 1
            ;;
    esac
done

shift $((OPTIND-1))

if [[ $# -gt 0 ]]; then
    echo >&2 "Invalid arguments: $@"
    echo >&2 "Use 'dayly -h' to see usage info"
    exit 1
fi

if [[ $OPTION_h ]]; then
    usage
    exit 0
fi

AUTHOR=$(git config user.name)

if [[ $OPTION_a ]] ; then
    if [[ $OPTION_a = "all" ]] ; then
        AUTHOR=".*"
    else
        AUTHOR="$OPTION_a"
    fi
fi

TOP_LEVEL_DIR=$(git rev-parse --show-toplevel)

SUBMODULES=$(git -C $TOP_LEVEL_DIR config  --file $TOP_LEVEL_DIR/.gitmodules --get-regexp path | awk -v path="${TOP_LEVEL_DIR}/" '{ print path$2 }')
REPOS=("$TOP_LEVEL_DIR" ${(f)SUBMODULES})

for REPO in $REPOS; do
    list_commits $REPO
done
